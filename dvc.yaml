vars:
- params.yaml
  # TODO figure out how to paramaterize outputs here
  #- docker_cmd: docker run -v $(pwd)/outputs:/outputs
- aws_cp: aws s3 --endpoint-url https://minio.etheredge.co cp

stages:
  wget:
    cmd: >
      ${docker_cmd} ${wget.img}
      ${wget.data_url} ${docker_out_dir}/${wget.out_dir}
    params:
    - wget
    outs:
    - ${out_dir}/${wget.out_dir}

  #move_wget:
    #cmd: ${aws_cp} ${out_dir}/${wget.out_dir} s3://gloves/${wget.out_dir}
    #deps:
      #- ${out_dir}/${wget.out_dir}
    #outs:
      #- s3://gloves/${wget.out_dir}

  untar:
    cmd: >
      ${docker_cmd} ${untar.img}
      ${untar.tar_args}  ${docker_out_dir}/${untar.data_dir}  ${docker_out_dir}/${wget.out_dir}
      ${untar.tar_file_name}
    deps:
    - ${out_dir}/${wget.out_dir}
    params:
    - untar
    - wget.out_dir
    outs:
    - ${out_dir}/${untar.data_dir}

  clean:
    cmd: >
      ${docker_cmd} ${clean.img}
      --data_dir ${docker_out_dir}/${untar.data_dir}
      --cleaned_dir_name ${docker_out_dir}/${clean.out_dir}
    deps:
    - ${out_dir}/${untar.data_dir}
    params:
    - clean
    - untar.data_dir
    outs:
    - ${out_dir}/${clean.out_dir}

  split:
    cmd: >
      ${docker_cmd} ${split.img}
      --data-dir ${docker_out_dir}/${clean.out_dir}
      --train-dir ${docker_out_dir}/${split.train_dir}
      --test-dir ${docker_out_dir}/${split.test_dir}
      --ratio ${split.ratio}
      --by-label False
    deps:
    - ${out_dir}/${clean.out_dir}
    params:
    - out_dir
    - split
    - clean.out_dir
    outs:
    - ${out_dir}/${split.train_dir}
    - ${out_dir}/${split.test_dir}

  build_image:
    cmd: ./build_image.sh && echo $(date) > last_build.log
    deps:
      - Dockerfile
      - build_image.sh
      - requirements.txt
      - gloves/
    outs:
      - last_build.log
    
  train_siamese:
    #${docker_cmd} ${train.docker_args} ${train.img} 
    cmd: >
      python gloves/main.py
      --train-dir ${out_dir}/${split.train_dir}
      --test-dir ${out_dir}/${split.test_dir}
      --model-dir ${out_dir}/${train.model_dir}
      --model-filename ${train.model_filename}
      --encoder-model ${out_dir}/${train.encoder}
      --metrics ${train.metrics}
      --epochs ${train.epochs}
    params:
      - out_dir
      - train
      - split.train_dir
      - split.test_dir
    deps:
      - gloves/main.py
      - ${out_dir}/${split.train_dir}
      - ${out_dir}/${split.test_dir}
    outs:
      - ${out_dir}/${train.model_dir}
      - ${out_dir}/${train.encoder}
    live:
      siamese_logs:
        summary: true
        html: true


  classifier:
    cmd: >
      ${docker_cmd} ${train.docker_args} 
      ${train.img} gloves/classifier.py
      --encoder-model-path ${out_dir}/${train.encoder}
      --train-dir ${out_dir}/${split.train_dir}
      --test-dir ${out_dir}/${split.test_dir}
      --model-path ${out_dir}/${classifier.model_dir}
      --label-encoder-path ${out_dir}/${classifier.label_encoder}
      --epochs ${classifier.epochs}
    params:
      - classifier
      - train.img
      - train.docker_args
      - train.encoder
      - split.train_dir
    deps:
      - ${out_dir}/${train.encoder}
      - ${out_dir}/${split.train_dir}
      - ${out_dir}/${split.test_dir}
    outs:
      - ${out_dir}/${classifier.model_dir}
      - ${out_dir}/${classifier.label_encoder}

  hydra:
    cmd: >
      ${docker_cmd} ${train.docker_args} 
      ${train.img} hydra.py
    params:
      - train.img
      - train.docker_args
    deps:
      - last_build.log
      